// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               v5.28.0
// source: updateProduct.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices';
import { Observable } from 'rxjs';
import { ObjectId } from 'typeorm';

export const protobufPackage = 'updateProduct';

export interface Product {
  _id: string | ObjectId;
  name: string;
  price: number;
  description: string;
}

export interface Products {
  products: Product[];
}

export interface UpdateProductDTO {
  user: Userdata | undefined;
  data: UpdateAbleData | undefined;
}

export interface Userdata {
  _id: string | ObjectId;
  firstName: string;
  lastName: string;
  username: string;
  email: string;
}

export interface UpdateAbleData {
  username?: string | undefined;
  firstName?: string | undefined;
  lastName?: string | undefined;
  email?: string | undefined;
}

export const UPDATE_PRODUCT_PACKAGE_NAME = 'updateProduct';

export interface UpdateProductServiceClient {
  updateProduct(request: UpdateProductDTO): Observable<Products>;
}

export interface UpdateProductServiceController {
  updateProduct(
    request: UpdateProductDTO,
  ): Promise<Products> | Observable<Products> | Products;
}

export function UpdateProductServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ['updateProduct'];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(
        constructor.prototype,
        method,
      );
      GrpcMethod('UpdateProductService', method)(
        constructor.prototype[method],
        method,
        descriptor,
      );
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(
        constructor.prototype,
        method,
      );
      GrpcStreamMethod('UpdateProductService', method)(
        constructor.prototype[method],
        method,
        descriptor,
      );
    }
  };
}

export const UPDATE_PRODUCT_SERVICE_NAME = 'UpdateProductService';
